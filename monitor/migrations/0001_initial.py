# Generated by Django 5.2 on 2025-07-02 17:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ListaPresenca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("sobrenome", models.CharField(max_length=100)),
                ("matricula", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Parametro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("limite_aceitavel", models.FloatField()),
                ("categoria", models.CharField(max_length=100)),
                ("requisito", models.TextField()),
                ("periodicidade", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Relatorio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("revisao", models.CharField(max_length=50)),
                ("data", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="UnidadeEmpresarial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unidade", models.CharField(max_length=100)),
                ("uf", models.CharField(max_length=2)),
                ("codigo", models.CharField(max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="UnidadeMedicao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("sigla", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="EducacaoAmbiental",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tema", models.CharField(max_length=100)),
                ("atividade", models.TextField()),
                ("data_planejada", models.DateField()),
                ("data_executada", models.DateField()),
                ("total_participantes", models.IntegerField()),
                (
                    "lista_presenca",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.listapresenca",
                    ),
                ),
                (
                    "relatorio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.relatorio",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ControleResiduo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo_residuo", models.CharField(max_length=100)),
                ("nome_residuo", models.CharField(max_length=100)),
                ("data_emissao", models.DateField(blank=True, null=True)),
                (
                    "armazenagem_temporaria",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "disposicao_final",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "transportador",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "receptor_residuo",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("mtr", models.CharField(blank=True, max_length=100, null=True)),
                ("cdf", models.CharField(blank=True, max_length=100, null=True)),
                ("peso", models.FloatField(blank=True, null=True)),
                (
                    "relatorio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.relatorio",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="relatorio",
            name="unidade",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="monitor.unidadeempresarial",
            ),
        ),
        migrations.CreateModel(
            name="PontoMonitoramento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("descricao", models.TextField()),
                ("classificacao", models.CharField(max_length=100)),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("zona_utm", models.CharField(max_length=50)),
                (
                    "unidade_empresarial",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.unidadeempresarial",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MonitoramentoEfluente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_medicao", models.DateField()),
                ("resultado", models.FloatField()),
                (
                    "conformidade",
                    models.CharField(
                        choices=[
                            ("Conforme", "Conforme"),
                            ("Não Conforme", "Não Conforme"),
                        ],
                        max_length=20,
                    ),
                ),
                ("justificativa", models.TextField(blank=True, null=True)),
                (
                    "tipo_efluente",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "parametro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.parametro",
                    ),
                ),
                (
                    "ponto_monitorado",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.pontomonitoramento",
                    ),
                ),
                (
                    "relatorio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.relatorio",
                    ),
                ),
                (
                    "unidade_empresarial",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monitor.unidadeempresarial",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "unidade",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="monitor.unidadeempresarial",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name="parametro",
            name="unidade_medicao",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="monitor.unidademedicao"
            ),
        ),
    ]
